name: Build & Test Common
on:
  workflow_call:
    inputs:
      actor:
        required: true
        type: string
      ref:
        required: true
        type: string
      commit:
        required: true
        type: string
      is_main_branch:
        required: true
        type: boolean
env:
  TERRAFORM_VERSION: '1.3.7'    
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18.13.0'
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ inputs.commit }}-test
      - name: install
        run: |
          npm ci
          npm run bootstrap
      - name: test
        run: npm test
  upload-fn-zips:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18.13.0'
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
            packages/*/dist
          key: ${{ inputs.commit }}-test
      - name: configure gcp credentials
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      - name: upload artifacts
        env:
          INPUT_SHA: ${{ inputs.commit }}
          DEBUG: 'true'
        run: |
          npx lerna run push
  plan:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      REF: ${{ inputs.commit }}
    strategy:
      matrix:
        include:
          - stage: prod
            credentials-key: SERVICE_ACCOUNT_KEY
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: configure gcp credentials
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
      - name: prepare terraform files for ${{ matrix.stage }} environment
        run: |
          cp -r terraform/service/ terraform/service-${{ matrix.stage }}
          cp -r terraform/routing/ terraform/routing-${{ matrix.stage }}
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: setup github http auth
        run: |
          echo "https://bbeesley-bot:${{ secrets.GH_PA_TOKEN }}@github.com" > "${HOME}/.git-credentials"
          git config --global credential.helper store
      - name: terraform init - service
        env:
          TF_DATA_DIR: terraform/service-${{ matrix.stage }}.terraform
        run: |
          terraform init \
          -backend-config="config/${{ matrix.stage }}/config.remote" \
          -input=false \
          -lock=false
        working-directory: terraform/service-${{ matrix.stage }}
      - name: terraform plan - service
        env:
          TF_DATA_DIR: terraform/service-${{ matrix.stage }}.terraform
        run: |
          terraform plan \
          -var-file="config/${{ matrix.stage }}/terraform.tfvars" \
          -var="build_number=${{ github.run_id }}" \
          -var="commit_sha=${REF:0:10}" \
          -input=false \
          -lock=false
        working-directory: terraform/service-${{ matrix.stage }}
      - name: terraform init - routing
        env:
          TF_DATA_DIR: terraform/routing-${{ matrix.stage }}.terraform
        run: |
          terraform init \
          -backend-config="config/${{ matrix.stage }}/config.remote" \
          -input=false \
          -lock=false
        working-directory: terraform/routing-${{ matrix.stage }}
      - name: terraform plan - routing
        env:
          TF_DATA_DIR: terraform/routing-${{ matrix.stage }}.terraform
        run: |
          terraform plan \
          -var-file="config/${{ matrix.stage }}/terraform.tfvars" \
          -var="build_number=${{ github.run_id }}" \
          -var="commit_sha=${REF:0:10}" \
          -input=false \
          -lock=false
        working-directory: terraform/routing-${{ matrix.stage }}
